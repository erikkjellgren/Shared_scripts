#!/usr/bin/env python

import subprocess
import time


def stream_process(process):
    go = process.poll() is None
    for line in process.stdout:
        print(line.decode("utf-8"), end="")
    return go


package_managers = ("apt", "brew", "conda", "pip")
pip_packages = (
    "fortls",
    "pre-commit",
    "pylatexenc",
    "pyscf",
    "qiskit",
    "qiskit-aer",
    "qiskit-ibm-provider",
    "qiskit-ibm-runtime",
    "qiskit-nature",
    "scalene",
    "sphinx",
    "sphinx_rtd_theme",
)

for package_manager in package_managers:
    print(f"\n### Updating packages in {package_manager} ###")
    process = subprocess.Popen(
        f"{package_manager} --version",
        shell=True,
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
    )
    std_out, std_err = process.communicate()
    std_out = std_out.decode("utf-8")
    std_err = std_err.decode("utf-8")
    if not std_out:
        print(f"{package_manager} not found on system.")
        continue
    if package_manager == "apt":
        process = subprocess.Popen(
            "sudo apt-get update",
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
        )
        while stream_process(process):
            time.sleep(0.1)
        process = subprocess.Popen(
            "sudo apt-get --with-new-pkgs upgrade -y",
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
        )
        while stream_process(process):
            time.sleep(0.1)
        process = subprocess.Popen(
            "sudo apt-get autoremove",
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
        )
        while stream_process(process):
            time.sleep(0.1)
    elif package_manager == "brew":
        process = subprocess.Popen(
            "brew update", shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT
        )
        while stream_process(process):
            time.sleep(0.1)
        process = subprocess.Popen(
            "brew upgrade", shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT
        )
        while stream_process(process):
            time.sleep(0.1)
    elif package_manager == "conda":
        process = subprocess.Popen(
            "conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main",
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
        )
        while stream_process(process):
            time.sleep(0.1)
        process = subprocess.Popen(
            "conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r",
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
        )
        while stream_process(process):
            time.sleep(0.1)
        process = subprocess.Popen(
            "conda update --all -y",
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
        )
        while stream_process(process):
            time.sleep(0.1)
        process = subprocess.Popen(
            "conda clean --all -y",
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
        )
        while stream_process(process):
            time.sleep(0.1)
    elif package_manager == "pip":
        process = subprocess.Popen(
            f"pip install {' '.join(pip_packages)} --upgrade",
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
        )
        while stream_process(process):
            time.sleep(0.1)
    else:
        print(f"Unknown package manager: {package_manager}")
